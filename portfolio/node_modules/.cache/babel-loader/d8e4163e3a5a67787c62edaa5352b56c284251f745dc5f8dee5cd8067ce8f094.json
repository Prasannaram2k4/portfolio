{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export const useTheme=()=>{const context=useContext(ThemeContext);if(!context){throw new Error('useTheme must be used within a ThemeProvider');}return context;};export const ThemeProvider=_ref=>{let{children}=_ref;const[theme,setTheme]=useState(()=>{// Check if there's a saved theme in localStorage\nconst savedTheme=localStorage.getItem('portfolio-theme');const initialTheme=savedTheme||'dark';// Apply theme immediately on initialization\ndocument.documentElement.classList.remove('light','dark');document.documentElement.classList.add(initialTheme);document.documentElement.setAttribute('data-theme',initialTheme);return initialTheme;});useEffect(()=>{// Save theme to localStorage whenever it changes\nlocalStorage.setItem('portfolio-theme',theme);// Apply theme class to document root with more explicit handling\ndocument.documentElement.classList.remove('light','dark');document.documentElement.classList.add(theme);// Also set data attribute for debugging\ndocument.documentElement.setAttribute('data-theme',theme);console.log('Theme changed to:',theme);// Debug log\n},[theme]);const toggleTheme=()=>{setTheme(prevTheme=>prevTheme==='light'?'dark':'light');};const value={theme,toggleTheme,isLight:theme==='light',isDark:theme==='dark'};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ThemeContext","useTheme","context","Error","ThemeProvider","_ref","children","theme","setTheme","savedTheme","localStorage","getItem","initialTheme","document","documentElement","classList","remove","add","setAttribute","setItem","console","log","toggleTheme","prevTheme","value","isLight","isDark","Provider"],"sources":["/Users/rrp/Desktop/portfolio/portfolio/portfolio/src/contexts/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(() => {\n    // Check if there's a saved theme in localStorage\n    const savedTheme = localStorage.getItem('portfolio-theme');\n    const initialTheme = savedTheme || 'dark';\n    \n    // Apply theme immediately on initialization\n    document.documentElement.classList.remove('light', 'dark');\n    document.documentElement.classList.add(initialTheme);\n    document.documentElement.setAttribute('data-theme', initialTheme);\n    \n    return initialTheme;\n  });\n\n  useEffect(() => {\n    // Save theme to localStorage whenever it changes\n    localStorage.setItem('portfolio-theme', theme);\n    \n    // Apply theme class to document root with more explicit handling\n    document.documentElement.classList.remove('light', 'dark');\n    document.documentElement.classList.add(theme);\n    \n    // Also set data attribute for debugging\n    document.documentElement.setAttribute('data-theme', theme);\n    \n    console.log('Theme changed to:', theme); // Debug log\n  }, [theme]);\n\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n\n  const value = {\n    theme,\n    toggleTheme,\n    isLight: theme === 'light',\n    isDark: theme === 'dark'\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAAC,CAAC,CAEpC,MAAO,MAAM,CAAAO,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGP,UAAU,CAACK,YAAY,CAAC,CACxC,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,IAAM,CACvC;AACA,KAAM,CAAAa,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAC1D,KAAM,CAAAC,YAAY,CAAGH,UAAU,EAAI,MAAM,CAEzC;AACAI,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,OAAO,CAAE,MAAM,CAAC,CAC1DH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,GAAG,CAACL,YAAY,CAAC,CACpDC,QAAQ,CAACC,eAAe,CAACI,YAAY,CAAC,YAAY,CAAEN,YAAY,CAAC,CAEjE,MAAO,CAAAA,YAAY,CACrB,CAAC,CAAC,CAEFf,SAAS,CAAC,IAAM,CACd;AACAa,YAAY,CAACS,OAAO,CAAC,iBAAiB,CAAEZ,KAAK,CAAC,CAE9C;AACAM,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,OAAO,CAAE,MAAM,CAAC,CAC1DH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,GAAG,CAACV,KAAK,CAAC,CAE7C;AACAM,QAAQ,CAACC,eAAe,CAACI,YAAY,CAAC,YAAY,CAAEX,KAAK,CAAC,CAE1Da,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEd,KAAK,CAAC,CAAE;AAC3C,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAe,WAAW,CAAGA,CAAA,GAAM,CACxBd,QAAQ,CAACe,SAAS,EAAIA,SAAS,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,CAAC,CACjE,CAAC,CAED,KAAM,CAAAC,KAAK,CAAG,CACZjB,KAAK,CACLe,WAAW,CACXG,OAAO,CAAElB,KAAK,GAAK,OAAO,CAC1BmB,MAAM,CAAEnB,KAAK,GAAK,MACpB,CAAC,CAED,mBACER,IAAA,CAACC,YAAY,CAAC2B,QAAQ,EAACH,KAAK,CAAEA,KAAM,CAAAlB,QAAA,CACjCA,QAAQ,CACY,CAAC,CAE5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}